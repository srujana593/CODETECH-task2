<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>To-Do List</h1>
        </header>
        <main>
            <div class="form-container">
                <input type="text" id="task-input" placeholder="Add a new task...">
                <button id="add-task-btn">Add Task</button>
            </div>
            <ul id="task-list">
                <!-- Task items will be dynamically inserted here -->
            </ul>
        </main>
        <footer>
            <p>&copy; 2024 To-Do List App</p>
        </footer>
    </div>
    <script src="scripts.js"></script>
</body>
</html>


body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

.container {
    max-width: 600px;
    margin: auto;
    padding: 20px;
}

header {
    text-align: center;
    margin-bottom: 20px;
}

h1 {
    margin: 0;
    color: #333;
}

.form-container {
    display: flex;
    margin-bottom: 20px;
}

#task-input {
    flex: 1;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#add-task-btn {
    padding: 10px 20px;
    margin-left: 10px;
    border: none;
    border-radius: 4px;
    background-color: #28a745;
    color: white;
    cursor: pointer;
}

#add-task-btn:hover {
    background-color: #218838;
}

#task-list {
    list-style-type: none;
    padding: 0;
}

.task-item {
    display: flex;
    align-items: center;
    background-color: #fff;
    margin-bottom: 10px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.task-item.completed {
    text-decoration: line-through;
    color: #888;
}

.task-item button {
    margin-left: auto;
    border: none;
    background-color: transparent;
    color: #dc3545;
    cursor: pointer;
}

.task-item button:hover {
    color: #c82333;
}

footer {
    text-align: center;
    margin-top: 20px;
    color: #777;
}




document.addEventListener('DOMContentLoaded', () => {
    const taskInput = document.getElementById('task-input');
    const addTaskBtn = document.getElementById('add-task-btn');
    const taskList = document.getElementById('task-list');

    function loadTasks() {
        const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
        tasks.forEach(task => {
            addTaskToDOM(task);
        });
    }

    function saveTasks() {
        const tasks = [];
        document.querySelectorAll('.task-item').forEach(taskItem => {
            tasks.push({
                text: taskItem.querySelector('.task-text').textContent,
                completed: taskItem.classList.contains('completed')
            });
        });
        localStorage.setItem('tasks', JSON.stringify(tasks));
    }

    function addTaskToDOM(task) {
        const li = document.createElement('li');
        li.className = 'task-item';
        if (task.completed) {
            li.classList.add('completed');
        }
        li.innerHTML = `
            <span class="task-text">${task.text}</span>
            <button onclick="toggleComplete(this)">✓</button>
            <button onclick="deleteTask(this)">✘</button>
        `;
        taskList.appendChild(li);
    }

    function toggleComplete(button) {
        const taskItem = button.parentElement;
        taskItem.classList.toggle('completed');
        saveTasks();
    }

    function deleteTask(button) {
        const taskItem = button.parentElement;
        taskItem.remove();
        saveTasks();
    }
  
    addTaskBtn.addEventListener('click', () => {
        const taskText = taskInput.value.trim();
        if (taskText === '') return;
        addTaskToDOM({ text: taskText, completed: false });
        taskInput.value = '';
        saveTasks();
    });

    taskInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            addTaskBtn.click();
        }
    });

    loadTasks();
});
